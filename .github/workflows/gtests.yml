name: gtests

on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install Packages
        run: >
          sudo apt update
          && sudo apt install libgtest-dev
      
      # fmt
      - name: Build and install fmt
        uses: jp-pino/cached-checkout-build-action@v1
        with:
          repository: fmtlib/fmt
          ref: 9.1.0
          cmake-flags: -DBUILD_SHARED_LIBS=1

      # spdlog
      - name: Build and install spdlog
        uses: jp-pino/cached-checkout-build-action@v1
        with:
          repository: gabime/spdlog
          ref: v1.11.0
          cmake-flags: -DBUILD_SHARED_LIBS=1

      - uses: actions/checkout@v2
        with:
          path: vdsproject
          submodules: 'true'

      - name: Build tests
        run: >
          cd $GITHUB_WORKSPACE/vdsproject 
          && mkdir build 
          && cd build 
          && cmake .. 
          && make

      - name: Run Tests
        run: >
          export LOG_DICTIONARY_TESTING
          && export LD_LIBRARY_PATH=/usr/local/lib
          && cd $GITHUB_WORKSPACE/vdsproject/build/src/test
          && mkdir graphs
          && ./VDSProject_test --gtest_output=xml:test-results.xml

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "vdsproject/build/src/test/test-results.xml"

      - name: Display mermaid graphs
        if: always()
        run: |
          cd $GITHUB_WORKSPACE/vdsproject/build/src/test/graphs
          echo "# Successful tests" >> $GITHUB_STEP_SUMMARY
          if [ -n "$(ls -A *.mmd)" ]; then
            for f in *.mmd; do 
                  echo "## $f" >> "$f.md"
                  echo "\`\`\`mermaid" >> "$f.md"
                  cat $f >> "$f.md"
                  echo "\`\`\`" >> "$f.md"
                  cat $f.md >> $GITHUB_STEP_SUMMARY
                  done
          fi;
          echo "---" >> $GITHUB_STEP_SUMMARY
          if [ -n "$(ls -A *.mmd.err)" ]; then
            echo "# Failed tests" >> "$f.md"
            for f in *.mmd.err; do 
                  echo "## $f" >> "$f.md"
                  echo "\`\`\`mermaid" >> "$f.md"
                  cat $f >> "$f.md"
                  echo "\`\`\`" >> "$f.md"
                  cat $f.md >> $GITHUB_STEP_SUMMARY
                  done;
          fi;

      - name: Generate Doxygen Test Summary
        if: always()
        run: |
          cd $GITHUB_WORKSPACE/vdsproject/build/src/test/graphs
          echo "# Doxygen Test Summary" >> ../TESTS.md
          if [ -n "$(ls -A *.dot)" ]; then
            echo "# Successful tests" >> ../TESTS.md
            for f in *.dot; do 
                  echo "## $f" >> "../TESTS.md"
                  echo "\\dotfile $f" >> "../TESTS.md"
                  done
          fi;
          echo "---" >> ../TESTS.md
          if [ -n "$(ls -A *.dot.err)" ]; then
            echo "# Failed tests" >> "../TESTS.md"
            for f in *.dot.err; do 
                  echo "## $f" >> "../TESTS.md"
                  echo "\\dotfile $f" >> "../TESTS.md"
                  done;
          fi;
          cat ../TESTS.md
  
      - name: Compile Docs
        uses: mattnotmitt/doxygen-action@v1.9.5
        with:
          working-directory: ./vdsproject/doc
          doxyfile-path: ./Doxygen
          enable-latex: true

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./vdsproject/doc/html
      
